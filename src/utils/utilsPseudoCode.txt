---------------------------------------
# calculateTotalItemsInCart(cartList)
---------------------------------------
Input: cartList (array of cart items)

Logic:
1. LOOP through each 'item' in 'cartList'.
2. GET the 'quantity' of each 'item'.
3. SUM up all quantities.
4. RETURN the total number of items.

Output: totalItems (number).

---------------------------------------
#calculateTotalPriceInCart(cartList)
---------------------------------------
Input: cartList (array of products)

Logic:
1. LOOP through 'cartList'.
2. FOR EACH 'item', MULTIPLY 'price' by 'quantity'.
3. SUM the results.
4. RETURN the total price.

Output: totalPrice (number).

-----------------------------------------
# calculateTotalPriceOfItem(id, cartList)
-----------------------------------------
Input: id (number or string), cartList (array of cart items)

Logic:
1. FIND the 'item' in 'cartList' with the matching 'id'.
2. GET the 'price' and 'quantity' of the item.
3. MULTIPLY 'price' by 'quantity'.
4. Return the total price for the item.

Output: totalPriceOfItem (number).


---------------------------------------
# capitalizeString(string)
---------------------------------------
Input: string (text)

Logic:
1. GET the first 'letter' of `string`.
2. CONVERT the 'letter' to uppercase.
3. CONCATENATE the uppercase 'letter' with the rest of the 'string'.
4. RETURN the result.

Output: capitalizedString (text).

---------------------------------------
#convertCurrency(price, fromCurrency, toCurrency)
---------------------------------------
Input: price (number), fromCurrency (string), toCurrency (string)

Logic:
1. FETCH exchange rate from API
2. CONVERT 'price' using currency rate
3. FORMAT 'price' with 2 decimals (use #formatCurrency())
4. RETURN the converted and formatted 'price'

Output: convertedPrice (number)

------------------------
#formatCurrency(price)
------------------------
Input: price (number)

Logic:
1. ROUND `price` to 2 decimal places.
2. RETURN the formatted price

Output: formattedPrice (number).


---------------------------------------
# updateCart(newItemObject, cartList)
---------------------------------------
Input: newItemObject (object), cartList (array of cart items)

Logic:
1. CHECK if `newItemObject` exists in `cartList` (match by 'id').
   - IF it exists, increase the `quantity`.
   - ELSE it doesn't exist, add `newItemObject` to the 'list' with 'quantity' = 1.
2. UPDATE `cartList`.
3. RETURN the updated `cartList`.

Output: updatedCartList (array of cart items).